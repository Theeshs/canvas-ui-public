name: Build and Deploy Next.js App to Docker Hub

on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Adjust if needed

      - name: Install dependencies
        run: npm install

      - name: Run build
        run: npm run build

      # Optional: Run tests
      # - name: Run tests
      #   run: npm test

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKERHUB_USERNAME }}/canvas-ui:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "✅ Successfully connected to VPS!"
            docker stop canvas-ui || true
            docker rm canvas-ui || true
            docker image prune -a -f
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/canvas-ui:latest
            docker run -d --name canvas-ui \
              --network canvas-app \
              -p 3000:3000 --restart always \
              -e NODE_ENV=production \
              ${{ secrets.DOCKERHUB_USERNAME }}/canvas-ui:latest
            docker system prune -f

  mirror-to-public:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout private repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.PUBLIC_REPO_TOKEN }}

      - name: Validate token exists
        run: |
          if [[ -z "${{ secrets.PUBLIC_REPO_TOKEN }}" ]]; then
            echo "❌ ERROR: PUBLIC_REPO_TOKEN secret is not configured!"
            echo "Go to Settings > Secrets and variables > Actions > New repository secret"
            exit 1
          fi
          echo "✅ Token found"

      - name: Remove private files
        run: |
          rm -rf .github
          git rm -rf --cached .github || true
          rm -f .gitignore
          rm -f .env.development
          rm -f .env.production
          echo "✅ Private files removed"

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          echo "✅ Git configured"

      - name: Add public remote
        run: |
          git remote remove public 2>/dev/null || true
          git remote add public "https://x-access-token:${{ secrets.PUBLIC_REPO_TOKEN }}@github.com/Theeshs/canvas-ui-public.git"
          echo "✅ Remote added"

      - name: Push to public repo
        run: |
          git push public HEAD:main --force
          echo "✅ Successfully mirrored to public repo"
